!function(){var e={174:function(){},897:function(){},291:function(e,t,r){var n=r(174);n.__esModule&&(n=n.default),"string"==typeof n&&(n=[[e.id,n,""]]),n.locals&&(e.exports=n.locals),(0,r(534).A)("d75126e0",n,!0,{})},890:function(e,t,r){var n=r(897);n.__esModule&&(n=n.default),"string"==typeof n&&(n=[[e.id,n,""]]),n.locals&&(e.exports=n.locals),(0,r(534).A)("251fa004",n,!0,{})},534:function(e,t,r){"use strict";function n(e,t){for(var r=[],n={},i=0;i<t.length;i++){var s=t[i],a=s[0],o={id:e+":"+i,css:s[1],media:s[2],sourceMap:s[3]};n[a]?n[a].parts.push(o):r.push(n[a]={id:a,parts:[o]})}return r}r.d(t,{A:function(){return x}});var i,s="undefined"!=typeof document;if("undefined"!=typeof DEBUG&&DEBUG&&!s)throw Error("vue-style-loader cannot be used in a non-browser environment. Use { target: 'node' } in your Webpack config to indicate a server-rendering environment.");var a={},o=s&&(document.head||document.getElementsByTagName("head")[0]),l=null,d=0,c=!1,p=function(){},u=null,g="data-vue-ssr-id",m="undefined"!=typeof navigator&&/msie [6-9]\b/.test(navigator.userAgent.toLowerCase());function x(e,t,r,i){c=r,u=i||{};var s=n(e,t);return h(s),function(t){for(var r=[],i=0;i<s.length;i++){var o=a[s[i].id];o.refs--,r.push(o)}t?h(s=n(e,t)):s=[];for(var i=0;i<r.length;i++){var o=r[i];if(0===o.refs){for(var l=0;l<o.parts.length;l++)o.parts[l]();delete a[o.id]}}}}function h(e){for(var t=0;t<e.length;t++){var r=e[t],n=a[r.id];if(n){n.refs++;for(var i=0;i<n.parts.length;i++)n.parts[i](r.parts[i]);for(;i<r.parts.length;i++)n.parts.push(b(r.parts[i]));n.parts.length>r.parts.length&&(n.parts.length=r.parts.length)}else{for(var s=[],i=0;i<r.parts.length;i++)s.push(b(r.parts[i]));a[r.id]={id:r.id,refs:1,parts:s}}}}function f(){var e=document.createElement("style");return e.type="text/css",o.appendChild(e),e}function b(e){var t,r,n=document.querySelector("style["+g+'~="'+e.id+'"]');if(n){if(c)return p;n.parentNode.removeChild(n)}if(m){var i=d++;t=w.bind(null,n=l||(l=f()),i,!1),r=w.bind(null,n,i,!0)}else t=_.bind(null,n=f()),r=function(){n.parentNode.removeChild(n)};return t(e),function(n){n?(n.css!==e.css||n.media!==e.media||n.sourceMap!==e.sourceMap)&&t(e=n):r()}}var v=(i=[],function(e,t){return i[e]=t,i.filter(Boolean).join("\n")});function w(e,t,r,n){var i=r?"":n.css;if(e.styleSheet)e.styleSheet.cssText=v(t,i);else{var s=document.createTextNode(i),a=e.childNodes;a[t]&&e.removeChild(a[t]),a.length?e.insertBefore(s,a[t]):e.appendChild(s)}}function _(e,t){var r=t.css,n=t.media,i=t.sourceMap;if(n&&e.setAttribute("media",n),u.ssrId&&e.setAttribute(g,t.id),i&&(r+="\n/*# sourceURL="+i.sources[0]+" */",r+="\n/*# sourceMappingURL=data:application/json;base64,"+btoa(unescape(encodeURIComponent(JSON.stringify(i))))+" */"),e.styleSheet)e.styleSheet.cssText=r;else{for(;e.firstChild;)e.removeChild(e.firstChild);e.appendChild(document.createTextNode(r))}}}},t={};function r(n){var i=t[n];if(void 0!==i)return i.exports;var s=t[n]={id:n,exports:{}};return e[n](s,s.exports,r),s.exports}r.d=function(e,t){for(var n in t)r.o(t,n)&&!r.o(e,n)&&Object.defineProperty(e,n,{enumerable:!0,get:t[n]})},r.o=function(e,t){return Object.prototype.hasOwnProperty.call(e,t)},r.r=function(e){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},r.p="bundles/itgcotax/",window?.__sw__?.assetPath&&(r.p=window.__sw__.assetPath+"/bundles/itgcotax/"),function(){"use strict";var e={};r.r(e);let{Component:t}=Shopware,{Criteria:n}=Shopware.Data;t.register("sw-text-filter",{template:'\n{% block sw_text_filter %}\n    <div class="sw-existence-filter">\n        <sw-base-filter\n            :title="filter.label"\n            :show-reset-button="!!value"\n            :active="active"\n            @filter-reset="resetFilter"\n        >\n            \n            {% block sw_text_filter_content %}\n                <sw-text-field\n                    :placeholder="filter.placeholder"\n                    :value="value"\n                    @update:value="changeValue"\n                />\n            {% endblock %}\n        </sw-base-filter>\n    </div>\n{% endblock %}\n',props:{filter:{type:Object,required:!0},active:{type:Boolean,required:!0}},computed:{value(){return this.filter.value}},methods:{changeValue(e){if(!e){this.resetFilter();return}let t=this.filter.property.concat(this.filter.schema?`.${this.filter.schema.localField}`:""),r=[n.contains(t,e)];this.$emit("filter-update",this.filter.name,r,e)},resetFilter(){this.$emit("filter-reset",this.filter.name)}}}),Shopware.Component.override("sw-filter-panel",{template:'\n{% block sw_filter_panel_item %}\n    <div\n            v-for="filter in listFilters"\n            :id="filter.name"\n            :key="filter.name"\n            class="sw-filter-panel__item"\n    >\n        <div v-if="false"></div>\n        <sw-text-filter\n                v-else-if="showFilter(filter, \'text-filter\')"\n                :filter="filter"\n                :active="!!activeFilters[filter.name]"\n                @filter-update="updateFilter"\n                @filter-reset="resetFilter"\n        />\n    </div>\n    {% parent %}\n{% endblock %}\n'}),Shopware.Component.override("sw-order-detail-base",{template:'\n{% block sw_order_detail_base_line_items_summary_taxes %}\n    <template v-if="taxStatus !== \'tax-free\'">\n        <template v-for="(calculatedTax, index) in sortedCalculatedTaxes">\n            <dt :key="`sorted-calculated-taxes-dt-${index}`">\n                {{ $tc(\'sw-order.detailBase.summaryLabelTaxes\', 1, { taxRate: getTaxRate(calculatedTax.tax) }) }}\n            </dt>\n            <dd :key="`sorted-calculated-taxes-dd-${index}`">\n                {{ calculatedTax.tax | currency(order.currency.translated.shortName) }}\n            </dd>\n        </template>\n    </template>\n{% endblock %}\n',methods:{getTaxRate(e){return parseFloat(100*e/this.order.amountNet).toFixed(2)}}}),Shopware.Component.override("sw-settings-tax-detail",{template:'\n{% block sw_settings_tax_detail_content_card %}\n    {% parent %}\n    <div class="sw-card">\n        <div class="sw-card__content">\n            <div class="sw-container"\n                 style="grid-template-columns: repeat(auto-fit, minmax(250px, 1fr)); gap: 0px 30px; place-items: stretch;">\n                <div class="sw-field sw-block-field sw-contextual-field sw-field--text is--disabled sw-field--default">\n                    {% block sw_settings_tax_service_provider_card %}\n                        <sw-tax-provider-card\n                            v-if="tax.id"\n                            :disabled="!taxId"\n                            class="sw-settings-tax-detail__tax-rule-grid"\n                            :tax="tax"\n                            :is-loading="isLoading"\n                        />\n                    {% endblock %}\n                </div>\n            </div>\n        </div>\n        <div></div>\n    </div>\n{% endblock %}\n'}),r(890);let{Component:i,Context:s}=Shopware,{Criteria:a}=Shopware.Data;i.register("sw-tax-provider-card",{template:'\n{% block sw_settings_tax_provider_card %}\n    <sw-container\n        columns="1fr 1fr"\n        gap="0px 32px"\n    >\n        \n        {% block sw_settings_tax_provider_card_type_select %}\n            <sw-entity-single-select\n                v-model:value="taxProvider.id"\n                show-clearable-button\n                :label="$tc(\'sw-override-settings-tax.taxProvider.cardTitle\')"\n                label-property="name"\n                :criteria="taxProviderCriteria"\n                entity="itg_tax_service_provider"\n                @update:value="changeTaxProvider"\n            />\n        {% endblock %}\n    </sw-container>\n{% endblock %}\n',inject:["repositoryFactory"],props:{tax:{type:Object,required:!0}},data(){return{taxProvider:null,currentTaxProvider:null}},computed:{taxRepository(){return this.repositoryFactory.create("tax")},taxProviderRepository(){return this.repositoryFactory.create("itg_tax_service_provider")},taxMappingRepository(){return this.repositoryFactory.create("itg_tax_provider")},taxProviderCriteria(){return new a}},created(){this.createdComponent()},methods:{changeTaxProvider(e){this.taxProviderRepository.get(e,s.api).then(e=>{this.currentTaxProvider=e,this.currentTaxProvider?(this.taxExtension=this.taxMappingRepository.create(Shopware.Context.api),this.tax.extensions.taxExtension?(this.taxExtension.taxId=this.tax.id,this.taxExtension.providerId=this.currentTaxProvider.id,this.taxMappingRepository.delete(this.tax.extensions.taxExtension.id).then(()=>{}),this.taxMappingRepository.save(this.taxExtension).then(()=>{})):(this.taxExtension.taxId=this.tax.id,this.taxExtension.providerId=this.currentTaxProvider.id,this.taxMappingRepository.save(this.taxExtension).then(()=>{}))):this.taxMappingRepository.delete(this.tax.extensions.taxExtension.id,s.api).then(()=>{})})},createdComponent(){this.currentTaxProvider?(this.taxProvider=this.currentTaxProvider,this.taxProvider.id&&this.changeTaxProvider(this.taxProvider.id)):(this.taxProvider=this.taxProviderRepository.create(),this.taxProvider.taxId=this.tax.id,this.tax.extensions.taxExtension&&(this.taxProvider.id=this.tax.extensions.taxExtension.providerId))}}});let{Component:o,Mixin:l}=Shopware;o.register("sw-settings-taxjar",{template:'\n{% block sw_settings_taxjar_index %}\n    <sw-page class="sw-settings-taxjar">\n\n        \n        {% block sw_settings_taxjar_search_bar %}\n            <template #search-bar>\n                <sw-search-bar />\n            </template>\n        {% endblock %}\n\n        \n        {% block sw_settings_taxjar_smart_bar_header %}\n            <template #smart-bar-header>\n                \n                {% block sw_settings_taxjar_smart_bar_header_title %}\n                    <h2>\n                        \n                        {% block sw_settings_taxjar_smart_bar_header_title_text %}\n                            {{ $tc(\'sw-settings.index.title\') }}\n                            <sw-icon\n                                    name="regular-chevron-right-xs"\n                                    small\n                            />\n                            {{ $tc(\'sw-settings-taxjar.general.textHeadline\') }}\n                        {% endblock %}\n                    </h2>\n                {% endblock %}\n            </template>\n        {% endblock %}\n\n        \n        {% block sw_settings_taxjar_smart_bar_actions %}\n            <template #smart-bar-actions>\n                \n                {% block sw_settings_tax_actions_save %}\n                    <sw-button-process\n                            class="sw-settings-login-registration__save-action"\n                            :is-loading="isLoading || systemConfigLoading"\n                            :process-success="isSaveSuccessful"\n                            :disabled="isLoading || systemConfigLoading"\n                            variant="primary"\n                            @update:process-success="saveFinish"\n                            @click="onSave"\n                    >\n                        {{ $tc(\'sw-settings-taxjar.general.buttonSave\') }}\n                    </sw-button-process>\n                {% endblock %}\n                \n                {% block sw_settings_tax_actions_log %}\n                    <sw-button\n                            class="sw-settings-tax__log-action"\n                            variant="primary"\n                            :is-loading="isLoading"\n                            :disabled="isLoading"\n                            :router-link="{ name: \'sw.tax.log.module.list\' }"\n                    >\n                        {{ $tc(\'sw-settings-taxjar.general.buttonLog\') }}\n                    </sw-button>\n                {% endblock %}\n\n                \n                {% block sw_settings_test_tax_jar_connection %}\n                    <sw-button\n                            class="sw-settings-tax-connection__test-action"\n                            variant="primary"\n                            :is-loading="isLoading"\n                            :disabled="isLoading"\n                            @click="testConnection"\n                    >\n                        {{ $tc(\'sw-settings-taxjar.general.testButtonLabel\') }}\n                    </sw-button>\n                {% endblock %}\n            </template>\n        {% endblock %}\n\n\n        \n        {% block sw_settings_taxjar_content %}\n            <template #content>\n                <sw-card-view>\n                    <sw-skeleton v-if="isLoading" />\n                    <sw-system-config\n                            v-show="!isLoading"\n                            ref="systemConfig"\n                            sales-channel-switchable\n                            domain="ITGCoTax.setting"\n                            @loading-changed="onLoadingChanged"\n                    />\n                </sw-card-view>\n            </template>\n        {% endblock %}\n    </sw-page>\n{% endblock %}\n',mixins:[l.getByName("notification")],data(){return{isLoading:!1,isSaveSuccessful:!1}},metaInfo(){return{title:this.$createTitle()}},methods:{saveFinish(){this.isSaveSuccessful=!1},basicHeaders(){return{"Content-Type":"application/json",Accept:"application/json",Authorization:`Bearer ${Shopware.Service("loginService").getToken()}`}},testConnection(){let e=this.$refs.systemConfig.actualConfigData[null],t=Shopware.Context.api.basePath,r=e["ITGCoTax.setting.liveApiToken"];e["ITGCoTax.setting.sandboxMode"]&&(r=e["ITGCoTax.setting.sandboxApiToken"]);let n=JSON.stringify({token:r,sandbox:e["ITGCoTax.setting.sandboxMode"],from_country:e["ITGCoTax.setting.shippingFromCountry"],from_zip:e["ITGCoTax.setting.shippingFromZip"],from_state:e["ITGCoTax.setting.shippingFromState"],from_city:e["ITGCoTax.setting.shippingFromCity"],from_street:e["ITGCoTax.setting.shippingFromStreet"]});fetch(t+"/api/_action/tax-jar/test-connection",{method:"POST",headers:this.basicHeaders(),body:n,redirect:"follow"}).then(e=>e.json()).then(e=>{try{if(e.error){let t=e.detail;(t=t.replace(/from_street/g,"Shipping From Street").replace(/from_country/g,"Shipping From Country").replace(/from_zip/g,"Shipping From ZipCode").replace(/from_state/g,"Shipping From State Code").replace(/from_city/g,"Shipping From City")).includes("Shipping From State Code")&&(t+=".Please provide valid Shipping From State Code Ex: WI for Wisconsin!"),this.createNotificationError({message:t})}else this.createNotificationSuccess({message:this.$tc("sw-settings-taxjar.testConnection.success")})}catch(e){this.createNotificationError({message:e})}}).catch(e=>{this.createNotificationError({message:e+".Please review logs for more detail!"})})},validateInput(){let e=this.$refs.systemConfig.actualConfigData[null],t=!1;return e["ITGCoTax.setting.sandboxMode"]?e["ITGCoTax.setting.sandboxApiToken"]||(this.createNotificationError({message:"Provide Valid Sandbox API Token"}),t=!0):e["ITGCoTax.setting.liveApiToken"]||(this.createNotificationError({message:"Provide Valid Live API Token"}),t=!0),e["ITGCoTax.setting.defaultProductTaxCode"]||(this.createNotificationError({message:"Provide Valid Product Tax Code"}),t=!0),e["ITGCoTax.setting.shippingFromStreet"]||(this.createNotificationError({message:"Provide Valid Shipping From Street"}),t=!0),e["ITGCoTax.setting.shippingFromCity"]||(this.createNotificationError({message:"Provide Valid Shipping From City"}),t=!0),e["ITGCoTax.setting.shippingFromZip"]||(this.createNotificationError({message:"Provide Valid Shipping From Zip"}),t=!0),e["ITGCoTax.setting.shippingFromState"]?e["ITGCoTax.setting.shippingFromState"].length>3&&(this.createNotificationError({message:"Provide Valid Shipping From State Code Ex: WI For Wisconsin"}),t=!0):(this.createNotificationError({message:"Provide Valid Shipping From State Code"}),t=!0),e["ITGCoTax.setting.shippingFromCountry"]||(this.createNotificationError({message:"Provide Valid Shipping From Country"}),t=!0),!t},onSave(){if(this.isSaveSuccessful=!1,!this.validateInput()){this.isLoading=!1;return}this.isLoading=!0,this.$refs.systemConfig.saveAll().then(()=>{this.isLoading=!1,this.isSaveSuccessful=!0}).catch(e=>{this.isLoading=!1,this.createNotificationError({message:e})})},onLoadingChanged(e){this.isLoading=e}}});let{Module:d}=Shopware;d.register("sw-settings-taxjar",{type:"core",name:"settings-taxjar",title:"Tax service provider settings",description:"Tax service provider settings",version:"1.0.0",targetVersion:"1.0.0",color:"#9AA8B5",icon:"regular-cog",favicon:"icon-module-settings.png",routes:{index:{component:"sw-settings-taxjar",path:"index",meta:{parentPath:"sw.settings.index",privilege:"system.system_config"}}},settingsItem:{group:"shop",to:"sw.settings.taxjar.index",icon:"regular-briefcase",privilege:"system.system_config"}});let{Component:c,Mixin:p}=Shopware,{Criteria:u}=Shopware.Data;c.register("sw-tax-log-module-list",{template:'\n{% block tax_jar_log_module_list %}\n    <sw-page>\n        \n        {% block tax_jar_log_smart_bar_header %}\n            <template #smart-bar-header>\n                \n                {% block tax_jar_log_list_smart_bar_header_title %}\n                    <h2>\n                        \n                        {% block emizen_module_list_smart_bar_header_title_text %}\n                            {{ $tc(\'sw-settings.index.title\') }}\n                            <sw-icon name="small-arrow-medium-right" small></sw-icon>\n                            {{ $t(\'sw-tax-log-module.general.mainMenuItemList\') }}\n                        {% endblock %}\n\n                        \n                        {% block emizen_module_list_smart_bar_header_amount %}\n                            <span v-if="total" class="sw-page__smart-bar-amount">\n                                ({{total}})\n                            </span>\n                        {% endblock %}\n                    </h2>\n                {% endblock %}\n            </template>\n        {% endblock %}\n        <template #smart-bar-actions>\n            \n            {% block sw_settings_test_tax_jar_connection %}\n                <sw-button\n                    class="sw-settings-tax-connection__test-action"\n                    variant="primary"\n                    :is-loading="isLoading"\n                    :disabled="isLoading"\n                    @click="exportLog"\n                >\n                    {{ $tc(\'sw-tax-log-module.export.buttonLabel\') }}\n                </sw-button>\n            {% endblock %}\n        </template>\n        <template #content>\n            <sw-entity-listing\n                :items="taxJarLogCollection"\n                :repository="getRepository"\n                :showSelection="false"\n                :columns="getColumns">\n                <template slot="column-request" slot-scope="{ item }">\n                    {{item.request}}\n                </template>\n                <template slot="column-response" slot-scope="{ item }">\n                    {{item.response}}\n                </template>\n            </sw-entity-listing>\n        </template>\n\n        \n        {% block wk_test_list_sidebar %}\n            <template #sidebar>\n                <sw-sidebar class="sw-order-list__sidebar">\n                    \n                    {% block tax_jar_log_list_sidebar_refresh %}\n                        <sw-sidebar-item\n                            icon="regular-undo"\n                            :title="$tc(\'sw-order.list.titleSidebarItemRefresh\')"\n                            @click="onRefresh">\n                        </sw-sidebar-item>\n                    {% endblock %}\n\n                    \n                    {% block tax_jar_log_list_sidebar_filter %}\n                        <sw-sidebar-filter-panel\n                            entity="taxjar_log"\n                            :storeKey="storeKey"\n                            :filters="listFilters"\n                            :defaults="defaultFilters"\n                            :activeFilterNumber="activeFilterNumber"\n                            @criteria-changed="updateCriteria">\n                        </sw-sidebar-filter-panel>\n                    {% endblock %}\n                </sw-sidebar>\n            </template>\n        {% endblock %}\n    </sw-page>\n{% endblock %}\n',inject:["repositoryFactory","filterFactory"],mixins:[p.getByName("notification"),p.getByName("listing"),p.getByName("placeholder")],metaInfo(){return{title:this.$createTitle()}},data(){return{total:0,page:1,limit:30,taxJarLogCollection:null,storeKey:"grid.filter.tax.log",repository:null,isLoading:!1,processSuccess:!1,defaultFilters:["tax-log-date-filter","tax-log-type-filter","tax-log-order-number-filter","tax-log-order-id-filter","tax-log-customer-name-filter","tax-log-customer-email-filter","tax-log-customer-ip-filter","tax-log-request-filter","tax-log-response-filter"],activeFilterNumber:0,filterCriteria:[]}},created(){},computed:{getRepository(){return this.repositoryFactory.create("itg_taxjar_log")},getColumns(){return this.getColumnsList()},listFilters(){return this.filterFactory.create("itg_taxjar_log",{"tax-log-date-filter":{property:"createdAt",dateType:"datetime-local",label:"Creation Time",placeholder:"Creation Time",showTimeframe:!0},"tax-log-type-filter":{property:"type",label:"Request Type",type:"text-filter",placeholder:"Request Type"},"tax-log-order-number-filter":{property:"orderNumber",label:"Order Number",type:"text-filter",placeholder:"Order Number"},"tax-log-order-id-filter":{property:"orderId",label:"Order Id",type:"text-filter",placeholder:"Order Id"},"tax-log-customer-name-filter":{property:"customerName",label:"Customer Name",type:"text-filter",placeholder:"Customer Name"},"tax-log-customer-email-filter":{property:"customerEmail",label:"Customer Email",type:"text-filter",placeholder:"Customer Email"},"tax-log-customer-ip-filter":{property:"remoteIp",label:"Customer IP",type:"text-filter",placeholder:"Customer IP"},"tax-log-request-filter":{property:"request",label:"Request",type:"text-filter",placeholder:"Request"},"tax-log-response-filter":{property:"response",type:"text-filter",label:"Response",placeholder:"Response"}})},defaultCriteria(){let e=new u(this.page,this.limit);return e.setTerm(this.term),e.addSorting(u.sort("createdAt","DESC")),this.filterCriteria.forEach(t=>{e.addFilter(t)}),e}},watch:{defaultCriteria:{handler(){this.getList()},deep:!0}},methods:{basicHeaders(){return{"Content-Type":"application/json",Accept:"application/json",Authorization:`Bearer ${Shopware.Service("loginService").getToken()}`}},exportLog(){let e={method:"GET",headers:this.basicHeaders(),redirect:"follow"};fetch(Shopware.Context.api.basePath+"/api/_action/tax-jar/export-log",e).then(e=>e.json()).then(e=>{let t="Customer Name,Customer Email,Customer IP,Order Number,Order Id,Request,Response,Creation Time\n";e.forEach(e=>{t+='"'+e.customerName+'",',t+='"'+e.customerEmail+'",',t+='"'+e.remoteIp+'",',t+='"'+e.orderNumber+'",',t+='"'+e.orderId+'",',t+='"'+e.request+'",',t+='"'+e.response+'",',t+=e.createdAt,t+="\n"});let r=document.createElement("a");r.href="data:text/csv;charset=utf-8,"+encodeURIComponent(t),r.target="_blank",r.download="ExportTaxJarLog.csv",r.click()}).catch(e=>{this.createNotificationError({message:e+".Please review logs for more detail!"})})},async getList(){this.isLoading=!0;let e=await Shopware.Service("filterService").mergeWithStoredFilters(this.storeKey,this.defaultCriteria);this.activeFilterNumber=e.filters.length;try{let e=await this.getRepository.search(this.defaultCriteria);this.total=e.total,this.taxJarLogCollection=e,this.isLoading=!1,this.selection={}}catch{this.isLoading=!1}},updateCriteria(e){this.page=1,this.filterCriteria=e},getColumnsList(){return[{property:"createdAt",dataIndex:"createdAt",label:"Creation Time",allowResize:!0,sortable:!0},{property:"type",dataIndex:"type",label:this.$t("sw-tax-log-module.list.requestType"),allowResize:!0,sortable:!0},{property:"orderNumber",dataIndex:"orderNumber",label:this.$t("sw-tax-log-module.list.orderNumber"),allowResize:!0,sortable:!0},{property:"orderId",dataIndex:"orderId",label:this.$t("sw-tax-log-module.list.orderId"),allowResize:!0,sortable:!0},{property:"customerName",dataIndex:"customerName",label:this.$t("sw-tax-log-module.list.customerName"),allowResize:!0,sortable:!0},{property:"customerEmail",dataIndex:"customerEmail",label:this.$t("sw-tax-log-module.list.customerEmail"),allowResize:!0,sortable:!0},{property:"remoteIp",dataIndex:"remoteIp",label:this.$t("sw-tax-log-module.list.remoteIp"),allowResize:!0,sortable:!0},{property:"request",dataIndex:"request",label:this.$t("sw-tax-log-module.list.titleColumn"),allowResize:!0,sortable:!0},{property:"response",dataIndex:"response",label:this.$t("sw-tax-log-module.list.descColumn"),allowResize:!0,sortable:!0}]}}});var g=JSON.parse('{"sw-tax-log-module":{"general":{"mainMenuItemList":"Tax Jar Log","descriptionTextModule":"Tax Jar Log"},"list":{"titleColumn":"Request","customerName":"Customer Name","requestType":"Request Type","orderNumber":"Order Number","orderId":"Order Id","customerEmail":"Customer Email","remoteIp":"Customer IP","descColumn":"Response","titleSaveSuccess":"Save","messageSaveSuccess":"Tax Log Saved Successfully"},"export":{"buttonLabel":"Export Log"}}}'),m=JSON.parse('{"sw-tax-log-module":{"general":{"mainMenuItemList":"Tax Jar Log","descriptionTextModule":"Tax Jar Log"},"list":{"titleColumn":"Request","customerName":"Customer Name","requestType":"Request Type","orderNumber":"Order Number","orderId":"Order Id","customerEmail":"Customer Email","remoteIp":"Customer IP","descColumn":"Response","titleSaveSuccess":"Save","messageSaveSuccess":"Tax Log Saved Successfully"},"export":{"buttonLabel":"Export Log"}}}');let{Module:x}=Shopware;x.register("sw-tax-log-module",{type:"plugin",title:"sw-tax-log-module.general.mainMenuItemList",description:"sw-tax-log-module.general.descriptionTextModule",snippets:{"en-GB":g,"de-De":m},routes:{list:{component:"sw-tax-log-module-list",path:"list",meta:{parentPath:"sw.settings.index"}}},settingsItem:[{name:"sw-tax-log-module-menu",label:"sw-tax-log-module.general.mainMenuItemList",to:"sw.tax.log.module.list",group:"plugins",icon:"regular-cog"}],navigation:[{id:"sw-tax-jar-log",label:"sw-tax-log-module.general.mainMenuItemList",color:"#ff68b4",icon:"regular-cog",path:"sw.tax.log.module.list",position:100,parent:"sw-order",privilege:"order.viewer"}]});let{Component:h}=Shopware;h.register("sw-nexus-page",{template:'<sw-page>\n  <template #content>\n\n    <sw-data-grid\n            :dataSource="regions"\n            :columns="columns"\n            :showSelection="false"\n            :showActions="false">\n    </sw-data-grid>\n\n    <div class="nexus-status-wrapper">\n\n      \n      <div v-if="regions.length > 0" class="success-nexus-alert">\n        Nexus is connected\n      </div>\n\n      \n      <div v-else class="danger-nexus-alert">\n        No nexus connected\n      </div>\n\n      \n      <p v-if="regions.length === 0" class="nexus-instruction">\n        Connect a nexus using TaxJar\n        <a href="https://app.taxjar.com/dashboard" target="_blank" rel="noopener noreferrer">\n          dashboard\n        </a>\n      </p>\n\n\n    </div>\n\n  </template>\n</sw-page>\n',inject:["nexusApiService"],data(){return{regions:[],columns:[{property:"country",label:"Country"},{property:"country_code",label:"Country Code"},{property:"region",label:"Region"},{property:"region_code",label:"Region Code"}]}},methods:{getData(){this.nexusApiService.getStates().then(e=>{e&&e.data&&e.data.regions?this.regions=e.data.regions.map((e,t)=>({id:t,...e})):this.regions=[]}).catch(e=>{console.error("Error fetching states",e),this.regions=[]})}},mounted(){this.getData()}});var f=JSON.parse('{"sw-nexus-module":{"general":{"mainMenuItemList":"Nexus Module","descriptionTextModule":"Manage TaxJar Nexus Connections"},"list":{"titleColumn":"Region","countryColumn":"Country","regionColumn":"Region","regionCodeColumn":"Region Code","statusConnected":"Nexus is connected","statusNotConnected":"No nexus connected","instruction":"Connect a nexus using TaxJar dashboard"}}}'),b=JSON.parse('{"sw-nexus-module":{"general":{"mainMenuItemList":"Nexus Modul","descriptionTextModule":"Verwalten Sie TaxJar Nexus Verbindungen"},"list":{"titleColumn":"Region","countryColumn":"Land","regionColumn":"Region","regionCodeColumn":"Regionscode","statusConnected":"Nexus ist verbunden","statusNotConnected":"Kein Nexus verbunden","instruction":"Verbinden Sie ein Nexus \xfcber das TaxJar Dashboard"}}}');let{Module:v}=Shopware;v.register("sw-nexus-module",{type:"plugin",title:"sw-nexus-module.general.mainMenuItemList",description:"sw-nexus-module.general.descriptionTextModule",snippets:{"en-GB":f,"de-De":b},routes:{list:{component:"sw-nexus-page",path:"list",meta:{parentPath:"sw.settings.index"}}},settingsItem:[{name:"sw-nexus-module-menu",label:"sw-nexus-module.general.mainMenuItemList",to:"sw.nexus.module.list",group:"plugins",icon:"regular-cog"}],navigation:[{id:"sw-nexus-module",label:"sw-nexus-module.general.mainMenuItemList",color:"#ff68b4",icon:"regular-cog",path:"sw.nexus.module.list",position:100,parent:"sw-order",privilege:"order.viewer"}]});let{Application:w}=Shopware,_=Shopware.Classes.ApiService;class y extends _{constructor(e,t,r="nexus"){super(e,t,r)}getStates(){return this.httpClient.get(`${this.getApiBasePath()}/states`,{headers:this.getBasicHeaders()}).then(e=>_.handleResponse(e))}}w.addServiceProvider("nexusApiService",e=>new y(w.getContainer("init").httpClient,e.loginService)),r(291),Shopware.Service("nexusApiService").register("nexusApiService",e.NexusApiService)}()}();